openapi: 3.0.0
info:  
  title: GCP Cloud Run Template
  description: This is a system API to display Hello World + Some other data
  contact: 
    name: ""
    email: "bashir.ali"
  version: 1.0.0

paths:
  '/hello_world':
    post:
      operationId: hello_world
      summary: Return Hello World Message
      parameters:
        - name: Accept
          in: header
          description: The Accept request HTTP header advertises which content type the client is able to understand.
          required: false
          schema:
            type: string
            enum:
              - application/json;version=1
          example: application/json;version=1
        - name: request_id
          in: header
          description: ApplicationID to identify applicant.
          required: true
          schema:
            type: string
          example: REQ_ID
        - name: request_timestamp
          in: header
          description: Used to reflect the time when the message was created.
          required: true
          schema:
            type: string
            format: date-time
          example: '2014-12-17T09:30:47Z'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hello_World_Request'
            example: 
              data:
                message_id: M_ID01
                message: Message example
      responses:
        200:
            description: Success response
            headers: 
                Response-RequestID:
                  $ref: '#/components/headers/Response-RequestID'
                Response-RequestTimestamp:
                  $ref: '#/components/headers/Response-RequestTimestamp'
                Response-ResponseTimestamp:
                  $ref: '#/components/headers/Response-ResponseTimestamp'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/GCPTemplateResponse'
        400:
          description: |
            Bad Request, consumers will get this error if the request does not contain valid headers and inputs.
          headers:
            Response-RequestID:
              $ref: '#/components/headers/Response-RequestID'
            Response-RequestTimestamp:
              $ref: '#/components/headers/Response-RequestTimestamp'
            Response-ResponseTimestamp:
              $ref: '#/components/headers/Response-ResponseTimestamp'
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error.
          headers:
            Response-RequestID:
              $ref: '#/components/headers/Response-RequestID'
            Response-RequestTimestamp:
              $ref: '#/components/headers/Response-RequestTimestamp'
            Response-ResponseTimestamp:
              $ref: '#/components/headers/Response-ResponseTimestamp'
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Error'
              example:
                - code: xxxxx
                  description: System Exception
                
components:
  headers:
    Response-RequestID:
      description: > 
        Response-RequestID is a unique identifier that is unique for a single
        request/response message and will be used to track consumer's request
        through the system.<br>
        UUID specification (RFC 4122, ITU-T Rec. X.667, ISO/IEC 11578:1996),
        used for auditing, and returned in the response.
      schema:
        type: string
        maxLength: 64
      example: "8476a9db-f82c-4713-824c-c6046521a947"
    Response-RequestTimestamp:
      description: Used to reflect the time when the message was created.
      schema:
        type: string
        maxLength: 64
        format: date-time
      example: "2014-12-17T09:30:47.000Z"
    Response-ResponseTimestamp:
      description: >-
        Used to reflect the time when the message sent back to the consumer of
        the service.
      schema:
        type: string
        maxLength: 64
        format: date-time
      example: "2014-12-17T09:30:49.000Z"
  parameters:
    Response-RequestID:
      name: Response-RequestID
      in: header
      description: >
        Response-RequestID is a unique identifier that is unique for a single
        request/response message and will be used to track consumer's request
        through the system.<br>
        UUID specification (RFC 4122, ITU-T Rec. X.667, ISO/IEC 11578:1996),
        used for auditing, and returned in the response.
      required: true
      schema:
        type: string
        maxLength: 64
      example: "8476a9db-f82c-4713-824c-c6046521a947"
    Response-RequestTimestamp:
      name: Response-RequestTimestamp
      in: header
      description: Used to reflect the time when the message was created.
      required: true
      schema:
        type: string
        maxLength: 64
        format: date-time
      example: "2014-12-17T09:30:47.000Z"
    Response-ResponseTimestamp:
      name: Response-ResponseTimestamp
      in: header
      description: >-
        Used to reflect the time when the message sent back to the consumer of
        the service.
      schema:
        type: string
        maxLength: 64
        format: date-time
      example: "2014-12-17T09:30:49.000Z"
  schemas:
    GCPTemplateRequest:
      type: object
      properties:
        request-body:
          $ref: '#/components/schemas/RequestBody'
      required: 
      - message
    GCPTemplateResponse:
      type: object 
      properties:
        response_message:
          type: string
          description: Latitude coordinate.
          example: 52.1380622
      required:
      - result_code
      - details
    RequestBody:
      type: object
      description: the address object.
      required:
        - message
      properties:
        message_id:
          type: string
          description: >
            Street number identifying a specific property on a public street
            combining both Street number prefix and suffix.   
          example: 22
        message:
          type: string
          description: >
            Building name is the formatted name either as a house name or a
            formatted unit/number premise to support business units and
            flats.   e.g Badwins, Holly Farm, Flat 3 Sussex Court, Unit 1b Bartley Business
            Park
    Error:
      type: object
      description: Error
      required:
        - code
        - description
      properties:
        code:
          type: string
          description: Error code
          example: xxxxx
        description:
          type: string
          description: |
            Technical descriptions associated with errors that assist operation support team/processes but will NOT be passed back to consumer.
            This will be one of the values Business Exception, System Exception or Validation Exception.
          example: Business Exception
